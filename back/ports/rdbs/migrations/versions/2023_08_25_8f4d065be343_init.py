"""init

Revision ID: 8f4d065be343
Revises: 
Create Date: 2023-08-25 11:46:52.503607

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '8f4d065be343'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk__categories'))
    )
    op.create_table('companies',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk__companies'))
    )
    op.create_table('states',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('value', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=20), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk__states'))
    )
    op.create_table('factors',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('category_id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('type', sa.String(length=20), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], name=op.f('fk__factors__category_id__categories')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk__factors'))
    )
    op.create_index(op.f('ix__factors__category_id'), 'factors', ['category_id'], unique=False)
    op.create_table('organisation_units',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.Column('company_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], name=op.f('fk__organisation_units__company_id__companies')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk__organisation_units'))
    )
    op.create_index(op.f('ix__organisation_units__company_id'), 'organisation_units', ['company_id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('password', postgresql.BYTEA(length=32), nullable=True),
    sa.Column('salt', postgresql.BYTEA(length=16), nullable=True),
    sa.Column('first_name', sa.String(length=100), nullable=True),
    sa.Column('last_name', sa.String(length=150), nullable=True),
    sa.Column('surname', sa.String(length=150), nullable=True),
    sa.Column('birthdate', sa.Date(), nullable=True),
    sa.Column('organisation_unit_id', sa.INTEGER(), nullable=True),
    sa.Column('position', sa.String(length=150), nullable=True),
    sa.Column('phone', sa.String(length=100), nullable=True),
    sa.Column('role', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['organisation_unit_id'], ['organisation_units.id'], name=op.f('fk__users__organisation_unit_id__organisation_units')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk__users')),
    sa.UniqueConstraint('email', name=op.f('uq__users__email'))
    )
    op.create_index(op.f('ix__users__organisation_unit_id'), 'users', ['organisation_unit_id'], unique=False)
    op.create_table('feedbacks',
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('day_time', sa.String(length=20), nullable=True),
    sa.Column('state_id', sa.INTEGER(), nullable=False),
    sa.Column('factor_id', sa.INTEGER(), nullable=True),
    sa.Column('value', sa.String(length=200), nullable=True),
    sa.ForeignKeyConstraint(['factor_id'], ['factors.id'], name=op.f('fk__feedbacks__factor_id__factors')),
    sa.ForeignKeyConstraint(['state_id'], ['states.id'], name=op.f('fk__feedbacks__state_id__states')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk__feedbacks__user_id__users')),
    sa.UniqueConstraint('user_id', 'date', 'day_time', name=op.f('uq__feedbacks__user_id_date_day_time'))
    )
    op.create_index(op.f('ix__feedbacks__factor_id'), 'feedbacks', ['factor_id'], unique=False)
    op.create_index(op.f('ix__feedbacks__state_id'), 'feedbacks', ['state_id'], unique=False)
    op.create_index(op.f('ix__feedbacks__user_id'), 'feedbacks', ['user_id'], unique=False)
    op.create_table('permissions',
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('permission', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk__permissions__user_id__users')),
    sa.UniqueConstraint('user_id', 'permission', name=op.f('uq__permissions__user_id_permission'))
    )
    op.create_index(op.f('ix__permissions__user_id'), 'permissions', ['user_id'], unique=False)
    op.create_table('sessions',
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('session_id', sa.String(length=36), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk__sessions__user_id__users')),
    sa.UniqueConstraint('user_id', name=op.f('uq__sessions__user_id'))
    )
    op.create_index(op.f('ix__sessions__user_id'), 'sessions', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix__sessions__user_id'), table_name='sessions')
    op.drop_table('sessions')
    op.drop_index(op.f('ix__permissions__user_id'), table_name='permissions')
    op.drop_table('permissions')
    op.drop_index(op.f('ix__feedbacks__user_id'), table_name='feedbacks')
    op.drop_index(op.f('ix__feedbacks__state_id'), table_name='feedbacks')
    op.drop_index(op.f('ix__feedbacks__factor_id'), table_name='feedbacks')
    op.drop_table('feedbacks')
    op.drop_index(op.f('ix__users__organisation_unit_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix__organisation_units__company_id'), table_name='organisation_units')
    op.drop_table('organisation_units')
    op.drop_index(op.f('ix__factors__category_id'), table_name='factors')
    op.drop_table('factors')
    op.drop_table('states')
    op.drop_table('companies')
    op.drop_table('categories')
    # ### end Alembic commands ###
