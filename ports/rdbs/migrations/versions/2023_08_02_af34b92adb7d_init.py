"""init

Revision ID: af34b92adb7d
Revises: 
Create Date: 2023-08-02 18:36:23.327050

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'af34b92adb7d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('organisation_units',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk__organisation_units'))
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('login', sa.String(length=50), nullable=True),
    sa.Column('hashed_pwd', postgresql.BYTEA(length=32), nullable=True),
    sa.Column('salt', postgresql.BYTEA(length=16), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk__users'))
    )
    op.create_table('participants',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=150), nullable=False),
    sa.Column('surname', sa.String(length=150), nullable=True),
    sa.Column('birthdate', sa.Date(), nullable=True),
    sa.Column('organisation_unit_id', sa.INTEGER(), nullable=False),
    sa.Column('position', sa.String(length=150), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('phone', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['organisation_unit_id'], ['organisation_units.id'], name=op.f('fk__participants__organisation_unit_id__organisation_units')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk__participants__user_id__users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk__participants'))
    )
    op.create_index(op.f('ix__participants__organisation_unit_id'), 'participants', ['organisation_unit_id'], unique=False)
    op.create_index(op.f('ix__participants__user_id'), 'participants', ['user_id'], unique=True)
    op.create_table('permissions',
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('permission', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk__permissions__user_id__users')),
    sa.UniqueConstraint('user_id', 'permission', name=op.f('uq__permissions__user_id_permission'))
    )
    op.create_index(op.f('ix__permissions__user_id'), 'permissions', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix__permissions__user_id'), table_name='permissions')
    op.drop_table('permissions')
    op.drop_index(op.f('ix__participants__user_id'), table_name='participants')
    op.drop_index(op.f('ix__participants__organisation_unit_id'), table_name='participants')
    op.drop_table('participants')
    op.drop_table('users')
    op.drop_table('organisation_units')
    # ### end Alembic commands ###
